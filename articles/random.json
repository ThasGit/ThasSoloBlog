{"randomArticles":[{"articleTitle":"红黑树","articleAbstractText":"红黑树是特殊的二叉平衡搜索树。 特点：  所有节点均为黑色或红色节点。 根节点一定为黑色节点。 叶子节点均使用 NIL 黑色节点填充。 不能出现连续的红色节点。 根节点到叶子节点的所有路径具有相同数量的黑色节点。  红黑树保证平衡的重要手段是左旋/右旋以及变色。 模拟器：https://www.cs.usfca.edu/~galles/visualization/RedBlack.html 二叉搜索树左子节点 &lt; 根节点 &lt; 右子节点， 无论左旋还是右旋始终满足这个大小关系。 左旋/右旋这两种手段适用于全部的二叉搜索树， 而不仅仅是平衡树。  红黑树保持平衡的方式： 大前提： 新插入的节点永远是红色. (如果是黑色， 那就没有红色了， 全靠黑色节点来保障平衡， 那就退化成严格平衡二叉树了) 1 新插入节点的父节点是黑色节点, 红黑树依然保持平衡， 无需操作。 2 新插入节点的父节点是红色节点， 叔叔节点为黑色节点或 NIL(直接忽略叔叔节点或者将其看成一个 NIL 整体): 分为 LL/RR 和 LR/RL 两大类型。 核心思想一样， 围绕新插入节点 + 父节点 + 祖父节....","articleStatus":0,"articlePermalink":"/articles/2020/12/05/1607170089855.html","articleImg1URL":"https://pic2.zhimg.com/80/v2-f10b3f46f56f3bca5338960ad0d5f90a_720w.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"SQL 优化的几种方式","articleAbstractText":"高性能索引 建立三星索引： 一星：根据索引能够确定一段较小的范围，散列好的字段靠前 二星：查询结果排序与索引排序一致，联合索引从做到右有序。 三星：宽索引，查询结果尽可能在索引中找到（覆盖索引），避免回表 索引使用注意点：  不要在索引列上做运算 尽可能全值匹配 （唯一确定一条索引） 最左匹配原则 范围条件放最后 覆盖索引 不等于要慎用 Null 和 Not Null， 尽可能不要使用null， null有很歧义 like查询只能匹配做前缀 字符串要加引号 or的所有条件都必须要有索引，否则会全表扫描 使用索引排序来做排序，从左到右依次有序，中间索引单独排列是无序的 使用自增主键，顺序插入（MySQL B+树特性）  移除无用的索引 插入或修改数据都需要修改索引，无用索引会浪费插入时的性能。 分页优化 分页查询时，offset的那部分依然会被查询到，只是在返回客户端时被丢弃了 （也就是查询到了大量不必要的数据），先根据条件查询 ID（不回表），再根据ID查询其他字段（子查询）。 此种办法会多物化出一个子查询结果集。 通过手动指定 MaxId 限定查询的起始位置。 查询降级 当查询无可避....","articleStatus":0,"articlePermalink":"/articles/2021/07/04/1625395418760.html","articleImg1URL":"https://b3logfile.com/bing/20190423.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Ubuntu Kylin 安装","articleAbstractText":"下载安装   显卡驱动 ./amdgpu-pro-install -y --opencl=pal,legacy --px glxinfo | grep rendering 显示yes说明正常 sudo radeontop -c 查看显卡使用情况   设置livepatch https://auth.livepatch.canonical.com/?user_type=ubuntu-user   keymanager https://www.keymanager.org/   crossover https://www.crossoverchina.com/chanpin.html   启动脚本 sudo ln -s /usr/local/jetbrains/idea-IU-203.7148.57/bin/idea.sh /usr/bin/idea   docker https://hub.docker.com/editions/community/docker-ce-server-ubuntu   oh-my-zsh https://ohmyz.sh/#install https://....","articleStatus":0,"articlePermalink":"/articles/2021/03/20/1616244286602.html","articleImg1URL":"https://b3logfile.com/bing/20200109.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Ubuntu/Deepin 英伟达显卡驱动安装","articleAbstractText":"手动安装驱动  屏蔽三方驱动 nouveau sudo vim /etc/modprobe.d/blacklist-gpu.conf # ban nouveau blacklist nouveau blacklist lbm-nouveau options nouveau modeset=0 alias nouveau off alias lbm-nouveau off   更新内核并重启 sudo update-initramfs -u sudo reboot 注意 deepin 有多个内核 关闭图形界面 sudo systemctl stop lightdm 安装驱动 chmod +x NVIDIA-Linux-x86_64-465.31.run sudo ./NVIDIA-Linux-x86_64-465.31.run --no-opengl-files --no-x-check --no-nouveau-check 参数不加也没事 卸载驱动 sudo nvidia-uninstall sudo nvidia-installer --uninstall sudo apt-get ....","articleStatus":0,"articlePermalink":"/articles/2021/06/02/1622637514303.html","articleImg1URL":"https://b3logfile.com/bing/20190207.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Jdk 自带工具","articleAbstractText":"jps, jstat, jinfo, jstack, jmap, jconsole, visualVm jps java 进程状况查看 jps -q 只显示进程号 jps -m 查看启动类 jps -v 查看详细启动参数 jstat jstat -class 显示类加载情况 jstat -gc [统计间隔] [统计次数] 查看 gc情况 S0C S1C S0U S1U EC EU OC OU MC MU CCSC CCSU YGC YGCT FGC FGCT CGC CGCT GCT 44480.0 44480.0 0.0 8352.5 355840.0 352724.5 889256.0 296943.0 522908.0 503674.2 67120.0 59766.6 6169 27.923 6 6.963 50 6.401 41.287 C: capacity U: used S0: suvivor0 S1: suvivor1 E: eden O: old M: metaspace CCS: 压缩类 C: count T: time 时间 YG: 年轻代GC FG: fullg....","articleStatus":0,"articlePermalink":"/articles/2021/04/10/1618066015513.html","articleImg1URL":"https://b3logfile.com/bing/20180529.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}